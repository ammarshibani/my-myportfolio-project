/* Base Styles */
:root {
    --primary-color: #3498db;
    --secondary-color: #2c3e50;
    --success-color: #2ecc71;
    --danger-color: #e74c3c;
    --warning-color: #f39c12;
    --light-color: #ffffff;
    --dark-color: #000000;
    --gray-color: #f8f9fa;
    --dark-gray: #343a40;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    overflow-x: hidden;
    /* These are correctly using variables, so they will adapt */
    background-color: var(--bg-color);
    color: var(--text-color);
}

.btn {
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    transition: all 0.3s ease;
    font-weight: 500;
}

.btn-primary {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    /* Ensure text color is readable on primary buttons */
    color: var(--light-color); /* Assuming primary is dark enough for light text */
}

.btn-outline-primary {
    color: var(--primary-color);
    border-color: var(--primary-color);
}

.btn-outline-primary:hover {
    background-color: var(--primary-color);
    /* Change 'color: white;' to a variable to adapt to potential primary color changes */
    color: var(--light-color); /* Use --light-color, or a contrasting color */
}

/* Add more button styles as needed */
.card {
    border: none;
    border-radius: 0.5rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    /* Uses theme variable for background */
    background-color: var(--card-bg);
    /* Ensure text inside card uses theme text color */
    color: var(--text-color);
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

.card-img-top {
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    height: 200px;
    object-fit: cover;
}

.form-control {
    border-radius: 0.25rem;
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--border-color);
    background-color: var(--card-bg);
    color: var(--text-color); /* Correctly uses theme text color */
}

.form-control:focus {
    box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
    border-color: var(--primary-color);
}

.invalid-feedback {
    color: var(--danger-color);
    font-size: 0.875rem;
}

.is-invalid {
    border-color: var(--danger-color);
}

.navbar {
    padding: 1rem 0;
    transition: all 0.3s ease;
    /* Remove the specific .navbar-light and .navbar-dark blocks from here.
       They are already defined in light.css and dark.css, and are more appropriate there. */
}

/* REMOVED FROM HERE:
.navbar-light {
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}
.navbar-dark {
    background-color: rgba(0, 0, 0, 0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}
*/

/* If .some-header exists in your HTML, ensure its color adapts */
.some-header {
    font-size: 2em;
    color: var(--text-color);
}

.nav-link {
    position: relative;
    font-weight: 500;
    margin: 0 0.5rem;
    /* Ensure nav links generally use the text color */
    color: var(--text-color);
}

.nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    background: var(--primary-color);
    bottom: 0;
    left: 0;
    transition: width 0.3s ease;
}

.nav-link:hover::after {
    width: 100%;
}

.timeline {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
}

.timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: var(--primary-color);
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
    border-radius: 3px;
}

.timeline-item {
    padding: 10px 40px;
    position: relative;
    width: 50%;
    box-sizing: border-box;
    /* Ensure timeline item text uses theme text color */
    color: var(--text-color);
}

.timeline-item::after {
    content: '';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -12px;
    background-color: var(--card-bg);
    border: 4px solid var(--primary-color);
    top: 15px;
    border-radius: 50%;
    z-index: 1;
}

.timeline-item:nth-child(odd) {
    left: 0;
}

.timeline-item:nth-child(even) {
    left: 50%;
}

.timeline-item:nth-child(even)::after {
    left: -12px;
}

.timeline-content {
    padding: 20px 30px;
    background-color: var(--card-bg);
    position: relative;
    border-radius: 6px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    /* Ensure text within timeline content uses theme text color */
    color: var(--text-color);
}

.timeline-date {
    position: absolute;
    width: 100px;
    top: 22px;
    font-weight: bold;
    color: var(--primary-color);
}

/* Responsive Timeline */
@media screen and (max-width: 768px) {
    .timeline::after {
        left: 31px;
    }

    .timeline-item {
        width: 100%;
        padding-left: 70px;
        padding-right: 25px;
    }

    .timeline-item::after {
        left: 18px;
    }

    .timeline-item:nth-child(odd) .timeline-date,
    .timeline-item:nth-child(even) .timeline-date {
        position: relative;
        top: 0;
        left: 0;
        right: auto;
        text-align: left;
        margin-bottom: 10px;
    }

    .timeline-item:nth-child(even) {
        left: 0;
    }
}

.section-title {
    position: relative;
    display: inline-block;
    /* Ensure section titles use theme text color */
    color: var(--text-color);
}

.section-title::after {
    content: '';
    position: absolute;
    width: 50px;
    height: 3px;
    background: var(--primary-color);
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
}

.bg-light {
    background-color: var(--section-bg) !important;
}

.shadow-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

.shadow {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.shadow-lg {
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
}

.animate {
    opacity: 1 !important;
    transform: translateY(0) !important;
}

.about-section {
    padding: 5rem 0;
}

.profile-photo {
    width: 300px;
    height: 300px;
    object-fit: cover;
    border: 5px solid var(--primary-color);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.profile-placeholder {
    width: 300px;
    height: 300px;
    background: var(--gray-color);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 5rem;
    /* Ensure placeholder text adapts */
    color: var(--text-color); /* Changed from fixed #777 */
}

.timeline-experience {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
}

.timeline-experience::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: var(--primary-color);
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
    border-radius: 3px;
}

.experience-description {
    white-space: pre-line;
    /* Ensure description text adapts */
    color: var(--text-color);
}

.interest-item {
    padding: 1rem;
    transition: transform 0.3s ease;
    /* Ensure interest item text adapts */
    color: var(--text-color);
}

.interest-item:hover {
    transform: translateY(-5px);
}

.interest-icon {
    color: var(--primary-color);
    margin-bottom: 0.5rem;
}

@media (max-width: 768px) {
    .profile-photo, .profile-placeholder {
        width: 200px;
        height: 200px;
        margin-bottom: 2rem;
    }
}

/* Certificates section comments remain as they were commented out in original */
/* .certificates-section { ... } */

.contact-section {
    padding: 5rem 0;
}

.contact-info-card, .contact-form-card {
    height: 100%;
    border-radius: 0.5rem;
    /* Ensure background and text adapt for contact cards */
    background-color: var(--card-bg);
    color: var(--text-color);
}

.contact-method {
    display: flex;
    align-items: flex-start;
    margin-bottom: 1.5rem;
    opacity: 0;
    transform: translateX(-20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.contact-method.animate {
    opacity: 1;
    transform: translateX(0);
}

.contact-icon {
    width: 40px;
    height: 40px;
    background-color: var(--primary-color);
    /* Using var(--light-color) for icon color for consistency */
    color: var(--light-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    flex-shrink: 0;
}

.contact-details a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.3s ease;
}

.contact-details a:hover {
    color: var(--secondary-color);
    text-decoration: underline;
}

.social-links {
    display: flex;
    gap: 0.75rem;
    margin-top: 1.5rem;
}

.social-link {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--card-bg);
    color: var(--primary-color);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.social-link:hover {
    background-color: var(--primary-color);
    /* Change 'color: white;' to a variable for better theme adaptability */
    color: var(--light-color); /* Use --light-color, or var(--text-color) from dark mode if primary is dark */
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.success-icon {
    font-size: 5rem;
    color: var(--success-color);
    margin-bottom: 1.5rem;
}

@media (max-width: 768px) {
    .contact-method {
        flex-direction: column;
    }

    .contact-icon {
        margin-right: 0;
        margin-bottom: 0.5rem;
    }
}

/* Hero section comments remain as they were commented out in original */
/* .hero-section { ... } */

.projects-section {
    padding: 5rem 0;
}

.projects-filter {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
    margin-bottom: 2rem;
}

.project-item {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
    /* Ensure project item text adapts */
    color: var(--text-color);
}

.project-item.animate {
    opacity: 1;
    transform: translateY(0);
}

.toggle-favorite .fas {
    color: var(--danger-color) !important;
}

@media (max-width: 768px) {
    .projects-filter {
        flex-direction: column;
        align-items: center;
    }
}

.skills-section {
    padding: 5rem 0;
}

.skills-filter {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
    margin-bottom: 2rem;
}

.skill-card {
    transition: all 0.3s ease;
    /* Ensure skill card text adapts */
    color: var(--text-color);
    background-color: var(--card-bg); /* Added for consistency */
}

.skill-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
}

.skill-icon {
    color: var(--primary-color);
    font-size: 1.5rem;
}

.radial-progress-bar {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    /* The background uses --card-bg, which is good. */
    background:
        radial-gradient(closest-side, var(--card-bg) 79%, transparent 80% 100%),
        conic-gradient(var(--progress-color) calc(var(--percentage) * 1%), #eee 0);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
}

.radial-progress-bar span {
    font-size: 1.5rem;
    font-weight: bold;
    /* Ensure progress bar text adapts */
    color: var(--text-color);
}

.chart-container {
    position: relative;
    height: 400px;
    margin: 0 auto;
}

@media (max-width: 768px) {
    .skills-filter {
        flex-direction: column;
        align-items: center;
    }

    .chart-container {
        height: 300px;
    }
}

/* Theme Switcher Toggle */
.form-check-input {
    width: 2.5em;
    height: 1.5em;
    cursor: pointer;
    /* Use theme variables for background and border */
    background-color: var(--gray-color); /* This might need to be dynamic for better contrast */
    border-color: var(--border-color);
}

.form-check-input:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.form-check-input:focus {
    box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
}

.form-check-label {
    cursor: pointer;
    margin-left: 0.5rem;
    /* Ensure label text adapts */
    color: var(--text-color);
}

#themeIcon {
    color: var(--text-color); /* Correctly uses theme text color */
    font-size: 1.1rem;
    transition: all 0.3s ease;
}

/* Dark mode specific styles for the toggle - these remain correct */
.dark-theme .form-check-input {
    background-color: var(--dark-gray);
}

.dark-theme .form-check-input:checked {
    background-color: var(--primary-color);
}
